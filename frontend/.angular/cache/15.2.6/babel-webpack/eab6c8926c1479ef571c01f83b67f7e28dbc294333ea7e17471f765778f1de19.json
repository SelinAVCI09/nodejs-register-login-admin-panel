{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AdminLoginComponent = class AdminLoginComponent {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n  }\n  onLogin(username, password) {\n    if (!username || !password) {\n      console.error('Username and password are required');\n      return;\n    }\n    this.authService.login({\n      username,\n      password\n    }).subscribe(response => {\n      const token = response.token;\n      const userId = response.id;\n      // Token'ı saklayın\n      this.authService.setToken(token);\n      // Admin olarak başarılı giriş yapıldığında yönlendirme\n      if (username === 'admin' && password === 'admin') {\n        this.router.navigate(['/page5']);\n      } else {\n        console.error('Invalid admin credentials');\n      }\n    }, error => {\n      console.error('Login failed', error);\n    });\n  }\n};\nAdminLoginComponent = __decorate([Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})], AdminLoginComponent);\nexport { AdminLoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAC9BC,YAAoBC,MAAc,EAAUC,WAAwB;IAAhD,WAAM,GAAND,MAAM;IAAkB,gBAAW,GAAXC,WAAW;EAAgB;EAEvEC,OAAO,CAACC,QAAgB,EAAEC,QAAgB;IACxC,IAAI,CAACD,QAAQ,IAAI,CAACC,QAAQ,EAAE;MAC1BC,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAC;MACnD;;IAGF,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MAAEJ,QAAQ;MAAEC;IAAQ,CAAE,CAAC,CAACI,SAAS,CACrDC,QAAa,IAAI;MAChB,MAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAK;MAC5B,MAAMC,MAAM,GAAGF,QAAQ,CAACG,EAAE;MAE1B;MACA,IAAI,CAACX,WAAW,CAACY,QAAQ,CAACH,KAAK,CAAC;MAEhC;MACA,IAAIP,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,EAAE;QAChD,IAAI,CAACJ,MAAM,CAACc,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;OACjC,MAAM;QACLT,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;;IAE9C,CAAC,EACAA,KAAK,IAAI;MACRD,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC,CAAC,CACF;EACH;CACD;AA7BYR,mBAAmB,eAL/BD,SAAS,CAAC;EACTkB,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACWnB,mBAAmB,CA6B/B;SA7BYA,mBAAmB","names":["Component","AdminLoginComponent","constructor","router","authService","onLogin","username","password","console","error","login","subscribe","response","token","userId","id","setToken","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/selinavci/Desktop/Kentkart/nodejs-register-login-admin-panel-main-2/frontend/src/app/components/admin-login/admin-login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service'; // AuthService'in doğru yolda olduğundan emin olun\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  onLogin(username: string, password: string) {\n    if (!username || !password) {\n      console.error('Username and password are required');\n      return;\n    }\n\n    this.authService.login({ username, password }).subscribe(\n      (response: any) => {\n        const token = response.token;\n        const userId = response.id;\n\n        // Token'ı saklayın\n        this.authService.setToken(token);\n\n        // Admin olarak başarılı giriş yapıldığında yönlendirme\n        if (username === 'admin' && password === 'admin') {\n          this.router.navigate(['/page5']);\n        } else {\n          console.error('Invalid admin credentials');\n        }\n      },\n      (error) => {\n        console.error('Login failed', error);\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}