{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ActivityService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:4002/api/activity';\n  }\n  recordButtonClick(userId, buttonName) {\n    return this.http.post(`${this.apiUrl}/click`, {\n      userId,\n      buttonName\n    });\n  }\n  getButtonStats(userId) {\n    return this.http.get(`${this.apiUrl}/button-stats/${userId}`);\n  }\n}\nActivityService.ɵfac = function ActivityService_Factory(t) {\n  return new (t || ActivityService)(i0.ɵɵinject(i1.HttpClient));\n};\nActivityService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ActivityService,\n  factory: ActivityService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,oCAAoC;EAEb;EAExCC,iBAAiB,CAACC,MAAc,EAAEC,UAAkB;IAClD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,GAAG,IAAI,CAACC,MAAM,QAAQ,EAAE;MAAEH,MAAM;MAAEC;IAAU,CAAE,CAAC;EAC5E;EAEAG,cAAc,CAACJ,MAAc;IAC3B,OAAO,IAAI,CAACF,IAAI,CAACO,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,iBAAiBH,MAAM,EAAE,CAAC;EACpE;;AAXWJ,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAU,SAAfV,eAAe;EAAAW,YAFd;AAAM","names":["ActivityService","constructor","http","recordButtonClick","userId","buttonName","post","apiUrl","getButtonStats","get","factory","providedIn"],"sourceRoot":"","sources":["/Users/selinavci/Downloads/LoginAuthenticationApp-NodeJS-AngularJS-main/frontend/src/app/services/activity.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivityService {\n  private apiUrl = 'http://localhost:4002/api/activity';\n\n  constructor(private http: HttpClient) { }\n\n  recordButtonClick(userId: string, buttonName: string): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/click`, { userId, buttonName });\n  }\n\n  getButtonStats(userId: string): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/button-stats/${userId}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}