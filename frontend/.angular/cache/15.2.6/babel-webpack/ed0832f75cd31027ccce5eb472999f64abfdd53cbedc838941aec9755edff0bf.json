{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ButtonClickService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:4002/api/buttonStats'; // Backend URL\n  }\n\n  getButtonClicks(userId) {\n    return this.http.get(`${this.apiUrl}/button-clicks/${userId}`);\n  }\n  recordButtonClick(userId, buttonName) {\n    return this.http.post(`${this.apiUrl}/record-button-click`, {\n      userId,\n      buttonName\n    });\n  }\n}\nButtonClickService.ɵfac = function ButtonClickService_Factory(t) {\n  return new (t || ButtonClickService)(i0.ɵɵinject(i1.HttpClient));\n};\nButtonClickService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ButtonClickService,\n  factory: ButtonClickService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,kBAAkB;EAI7BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,uCAAuC,CAAC,CAAC;EAElB;;EAExCC,eAAe,CAACC,MAAc;IAC5B,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACC,MAAM,kBAAkBF,MAAM,EAAE,CAAC;EACvE;EAEAG,iBAAiB,CAACH,MAAc,EAAEI,UAAkB;IAClD,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAM,GAAG,IAAI,CAACH,MAAM,sBAAsB,EAAE;MAAEF,MAAM;MAAEI;IAAU,CAAE,CAAC;EAC1F;;AAZWR,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAU,SAAlBV,kBAAkB;EAAAW,YAFjB;AAAM","names":["ButtonClickService","constructor","http","getButtonClicks","userId","get","apiUrl","recordButtonClick","buttonName","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/selinavci/Desktop/Kentkart/LoginAuthenticationApp-NodeJS-AngularJS-main/frontend/src/app/services/button-click.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ButtonClickService {\n\n  private apiUrl = 'http://localhost:4002/api/buttonStats'; // Backend URL\n\n  constructor(private http: HttpClient) { }\n\n  getButtonClicks(userId: string): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/button-clicks/${userId}`);\n  }\n\n  recordButtonClick(userId: string, buttonName: string): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/record-button-click`, { userId, buttonName });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}