{"ast":null,"code":"import _asyncToGenerator from \"/Users/selinavci/Downloads/LoginAuthenticationApp-NodeJS-AngularJS-main/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(router, userService) {\n    this.router = router;\n    this.userService = userService;\n  } // Servisi enjekte ettik\n  registerClick(username, password) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (username.value === '' || password.value === '') {\n        return alert(\"Please fill in all fields\");\n      }\n      yield _this.Login(username, password);\n    })();\n  }\n  Login(username, password) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield fetch('http://localhost:4002/api/v2/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: username.value,\n            password: password.value\n          })\n        });\n        if (!response.ok) {\n          password.value = '';\n          return alert('Invalid Username or Password.');\n        }\n        const result = yield response.json();\n        username.value = '';\n        password.value = '';\n        const getUserInfo = yield fetch(`http://localhost:4002/api/v1/user/${result.result.data[0].id}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${result.token}` // Corrected to 'Bearer'\n          }\n        });\n\n        if (!getUserInfo.ok) {\n          return alert(`Couldn't get user info. Please try again later.`);\n        }\n        const userInfoResult = yield getUserInfo.json();\n        // Store user info in UserService\n        _this2.userService.setUserInfo(userInfoResult[0]);\n        // Navigate to home or another page\n        _this2.router.navigate(['/']);\n      } catch (error) {\n        console.error('Error:', error);\n        alert('An error occurred. Please try again later.');\n      }\n    })();\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAEzBC,YAAoBC,MAAc,EAAUC,WAAwB;IAAhD,WAAM,GAAND,MAAM;IAAkB,gBAAW,GAAXC,WAAW;EAAiB,CAAC,CAAC;EAEpEC,aAAa,CAACC,QAA0B,EAAEC,QAA0B;IAAA;IAAA;MACxE,IAAID,QAAQ,CAACE,KAAK,KAAK,EAAE,IAAID,QAAQ,CAACC,KAAK,KAAK,EAAE,EAAE;QAClD,OAAOC,KAAK,CAAC,2BAA2B,CAAC;;MAG3C,MAAM,KAAI,CAACC,KAAK,CAACJ,QAAQ,EAAEC,QAAQ,CAAC;IAAC;EACvC;EAEMG,KAAK,CAACJ,QAA0B,EAAEC,QAA0B;IAAA;IAAA;MAChE,IAAI;QACF,MAAMI,QAAQ,SAASC,KAAK,CAAC,oCAAoC,EAAE;UACjEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;WACjB;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBX,QAAQ,EAAEA,QAAQ,CAACE,KAAK;YACxBD,QAAQ,EAAEA,QAAQ,CAACC;WACpB;SACF,CAAC;QAEF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;UAChBX,QAAQ,CAACC,KAAK,GAAG,EAAE;UACnB,OAAOC,KAAK,CAAC,+BAA+B,CAAC;;QAG/C,MAAMU,MAAM,SAAUR,QAAQ,CAACS,IAAI,EAAe;QAElDd,QAAQ,CAACE,KAAK,GAAG,EAAE;QACnBD,QAAQ,CAACC,KAAK,GAAG,EAAE;QAEnB,MAAMa,WAAW,SAAST,KAAK,CAAC,qCAAqCO,MAAM,CAACA,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC,CAACC,EAAE,EAAE,EAAE;UAC/FV,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,UAAUK,MAAM,CAACK,KAAK,EAAE,CAAC;;SAE7C,CAAC;;QAEF,IAAI,CAACH,WAAW,CAACH,EAAE,EAAE;UACnB,OAAOT,KAAK,CAAC,iDAAiD,CAAC;;QAGjE,MAAMgB,cAAc,SAAUJ,WAAW,CAACD,IAAI,EAAiB;QAE/D;QACA,MAAI,CAAChB,WAAW,CAACsB,WAAW,CAACD,cAAc,CAAC,CAAC,CAAC,CAAC;QAE/C;QACA,MAAI,CAACtB,MAAM,CAACwB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;OAC5B,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9BnB,KAAK,CAAC,4CAA4C,CAAC;;IACpD;EACH;CACD;AA3DYR,cAAc,eAL1BD,SAAS,CAAC;EACT8B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACW/B,cAAc,CA2D1B;SA3DYA,cAAc","names":["Component","LoginComponent","constructor","router","userService","registerClick","username","password","value","alert","Login","response","fetch","method","headers","body","JSON","stringify","ok","result","json","getUserInfo","data","id","token","userInfoResult","setUserInfo","navigate","error","console","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/selinavci/Downloads/LoginAuthenticationApp-NodeJS-AngularJS-main/frontend/src/app/components/login/login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';  // Servisi import ettik\nimport { Response, UserInfo } from '../ResponseTemplate';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  constructor(private router: Router, private userService: UserService) { } // Servisi enjekte ettik\n\n  async registerClick(username: HTMLInputElement, password: HTMLInputElement) {\n    if (username.value === '' || password.value === '') {\n      return alert(\"Please fill in all fields\");\n    }\n\n    await this.Login(username, password);\n  }\n\n  async Login(username: HTMLInputElement, password: HTMLInputElement) {\n    try {\n      const response = await fetch('http://localhost:4002/api/v2/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username.value,\n          password: password.value,\n        })\n      });\n      \n      if (!response.ok) {\n        password.value = '';\n        return alert('Invalid Username or Password.');\n      }\n\n      const result = (await response.json()) as Response;\n\n      username.value = '';\n      password.value = '';\n\n      const getUserInfo = await fetch(`http://localhost:4002/api/v1/user/${result.result.data[0].id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${result.token}` // Corrected to 'Bearer'\n        }\n      });\n\n      if (!getUserInfo.ok) {\n        return alert(`Couldn't get user info. Please try again later.`);\n      }\n\n      const userInfoResult = (await getUserInfo.json()) as UserInfo[];\n\n      // Store user info in UserService\n      this.userService.setUserInfo(userInfoResult[0]);\n\n      // Navigate to home or another page\n      this.router.navigate(['/']);\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred. Please try again later.');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}