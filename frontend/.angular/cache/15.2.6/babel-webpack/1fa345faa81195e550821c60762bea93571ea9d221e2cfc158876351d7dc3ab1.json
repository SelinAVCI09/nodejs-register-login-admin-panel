{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AdminLoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"div\", 12)(3, \"p\");\n    i0.ɵɵtext(4, \"Hen\\u00FCz \\u00FCye de\\u011Fil misin? \");\n    i0.ɵɵelementStart(5, \"a\", 13);\n    i0.ɵɵtext(6, \"Kay\\u0131t Ol\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"div\", 12)(8, \"p\");\n    i0.ɵɵtext(9, \"Admin misin? \");\n    i0.ɵɵelementStart(10, \"a\", 14);\n    i0.ɵɵtext(11, \"Giri\\u015F Yap\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.message, \" \");\n  }\n}\nexport class AdminLoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.username = '';\n    this.password = '';\n  }\n  onLogin() {\n    if (this.username === 'admin' && this.password === 'admin') {\n      this.router.navigate(['/admin-dashboard']);\n    } else {\n      alert('Kullanıcı adı veya şifre yanlış!');\n    }\n  }\n}\nAdminLoginComponent.ɵfac = function AdminLoginComponent_Factory(t) {\n  return new (t || AdminLoginComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nAdminLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminLoginComponent,\n  selectors: [[\"app-admin-login\"]],\n  decls: 17,\n  vars: 1,\n  consts: [[1, \"login-container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\"], [\"usernameInput\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\"], [\"passwordInput\", \"\"], [\"type\", \"submit\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"], [1, \"login\"], [\"routerLink\", \"/register\"], [\"routerLink\", \"/admin-login\"]],\n  template: function AdminLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminLoginComponent_Template_form_ngSubmit_3_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(8);\n        const _r1 = i0.ɵɵreference(13);\n        return i0.ɵɵresetView(ctx.onLogin(_r0, _r1));\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Username:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4, 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7, 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 9);\n      i0.ɵɵtext(15, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(16, AdminLoginComponent_div_16_Template, 12, 1, \"div\", 10);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngIf\", ctx.message);\n    }\n  },\n  dependencies: [i2.NgIf, i1.RouterLink, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAaEA,+BAA2C;IACzCA,YACA;IAAAA,+BAAmB;IACdA,sDAAuB;IAAAA,6BAA0B;IAAAA,6BAAQ;IAAAA,iBAAI;IAElEA,+BAAmB;IACdA,6BAAa;IAAAA,8BAA6B;IAAAA,+BAAS;IAAAA,iBAAI;;;;IAL5DA,eACA;IADAA,+CACA;;;ACRJ,OAAM,MAAOC,mBAAmB;EAI9BC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAH1B,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;EAEgB;EAErCC,OAAO;IACL,IAAI,IAAI,CAACC,QAAQ,KAAK,OAAO,IAAI,IAAI,CAACC,QAAQ,KAAK,OAAO,EAAE;MAC1D,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;KAC3C,MAAM;MACLC,KAAK,CAAC,kCAAkC,CAAC;;EAE7C;;AAZWP,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDPhCb,8BAA6B;MACvBA,qBAAK;MAAAA,iBAAK;MACdA,+BAAyD;MAAnDA;QAAAA;QAAA;QAAA;QAAA,OAAYA,oCAAqC;MAAA,EAAC;MACtDA,8BAAwB;MACAA,yBAAS;MAAAA,iBAAQ;MACvCA,8BAAkD;MACpDA,iBAAM;MACNA,8BAAwB;MACAA,0BAAS;MAAAA,iBAAQ;MACvCA,+BAAsD;MACxDA,iBAAM;MACNA,kCAAsB;MAAAA,sBAAK;MAAAA,iBAAS;MAEtCA,wEAQM;MACRA,iBAAM;;;MATEA,gBAAa;MAAbA,kCAAa","names":["i0","AdminLoginComponent","constructor","router","onLogin","username","password","navigate","alert","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/selinavci/Downloads/LoginAuthenticationApp-NodeJS-AngularJS-main/frontend/src/app/components/admin-login/admin-login.component.html","/Users/selinavci/Downloads/LoginAuthenticationApp-NodeJS-AngularJS-main/frontend/src/app/components/admin-login/admin-login.component.ts"],"sourcesContent":["<div class=\"login-container\">\n  <h2>Login</h2>\n  <form (ngSubmit)=\"onLogin(usernameInput, passwordInput)\">\n    <div class=\"form-group\">\n      <label for=\"username\">Username:</label>\n      <input type=\"text\" id=\"username\" #usernameInput />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" #passwordInput />\n    </div>\n    <button type=\"submit\">Login</button>\n  </form>\n  <div *ngIf=\"message\" class=\"error-message\">\n    {{ message }}\n    <div class=\"login\">\n      <p>Henüz üye değil misin? <a routerLink=\"/register\">Kayıt Ol</a></p>\n    </div>\n    <div class=\"login\">\n      <p>Admin misin? <a routerLink=\"/admin-login\">Giriş Yap</a></p>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html'\n})\nexport class AdminLoginComponent {\n  username: string = '';\n  password: string = '';\n\n  constructor(private router: Router) {}\n\n  onLogin() {\n    if (this.username === 'admin' && this.password === 'admin') {\n      this.router.navigate(['/admin-dashboard']);\n    } else {\n      alert('Kullanıcı adı veya şifre yanlış!');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}