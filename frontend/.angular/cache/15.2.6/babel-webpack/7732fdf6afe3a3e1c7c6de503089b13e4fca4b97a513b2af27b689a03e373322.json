{"ast":null,"code":"import { of } from 'rxjs'; // 'of' ekleyin\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/button-click.service\";\nfunction Page5Component_div_8_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const click_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Button ID: \", click_r3.buttonId, \" - Click Count: \", click_r3.count, \" \");\n  }\n}\nfunction Page5Component_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Button Clicks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, Page5Component_div_8_li_4_Template, 2, 2, \"li\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.buttonClicks);\n  }\n}\nfunction Page5Component_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.message);\n  }\n}\nexport class Page5Component {\n  constructor(buttonClickService) {\n    this.buttonClickService = buttonClickService;\n    this.userId = 1; // Örnek kullanıcı ID'si, gerçek uygulamada dinamik olabilir\n    this.buttonClicks$ = of([]); // Başlangıç değeri olarak boş bir observable atayın\n    this.buttonClicks = []; // Button click verilerini tutmak için array\n  }\n\n  ngOnInit() {\n    this.fetchButtonClicks(); // Sayfa yüklendiğinde buton tıklama verilerini al\n  }\n\n  handleButtonClick(buttonId) {\n    this.buttonClickService.recordButtonClick(this.userId, buttonId).subscribe(response => {\n      console.log('Button click recorded:', response);\n      this.fetchButtonClicks(); // Buton tıklama verilerini güncelle\n    }, error => {\n      console.error('Error recording button click:', error);\n    });\n  }\n  fetchButtonClicks() {\n    this.buttonClicks$ = this.buttonClickService.getButtonClicks(this.userId).pipe(map(data => {\n      this.buttonClicks = data;\n      return data;\n    }), catchError(error => {\n      console.error('Error fetching button clicks:', error);\n      return of([]); // Hata durumunda boş bir observable döndürün\n    }));\n  }\n\n  logout() {\n    // Kullanıcı çıkışı işlemi\n    console.log('Logging out');\n  }\n}\nPage5Component.ɵfac = function Page5Component_Factory(t) {\n  return new (t || Page5Component)(i0.ɵɵdirectiveInject(i1.ButtonClickService));\n};\nPage5Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Page5Component,\n  selectors: [[\"app-page5\"]],\n  decls: 10,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"button-container\"], [3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function Page5Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Page 5\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function Page5Component_Template_button_click_4_listener() {\n        return ctx.fetchButtonClicks();\n      });\n      i0.ɵɵtext(5, \"Get Button Clicks\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function Page5Component_Template_button_click_6_listener() {\n        return ctx.logout();\n      });\n      i0.ɵɵtext(7, \"Logout\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(8, Page5Component_div_8_Template, 5, 1, \"div\", 3);\n      i0.ɵɵtemplate(9, Page5Component_p_9_Template, 2, 1, \"p\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.buttonClicks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM,CAAC,CAAC;AACvC,SAASC,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;;;;;ICM1CC,0BAAuC;IACrCA,YACF;IAAAA,iBAAK;;;;IADHA,eACF;IADEA,iGACF;;;;;IALJA,2BAA0B;IACpBA,6BAAa;IAAAA,iBAAK;IACtBA,0BAAI;IACFA,mEAEK;IACPA,iBAAK;;;;IAHmBA,eAAe;IAAfA,6CAAe;;;;;IAKzCA,yBAAmB;IAAAA,YAAa;IAAAA,iBAAI;;;;IAAjBA,eAAa;IAAbA,oCAAa;;;ADJlC,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,kBAAsC;IAAtC,uBAAkB,GAAlBA,kBAAkB;IAJtC,WAAM,GAAW,CAAC,CAAC,CAAC;IACpB,kBAAa,GAAsBN,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,iBAAY,GAAU,EAAE,CAAC,CAAC;EAEmC;;EAE7DO,QAAQ;IACN,IAAI,CAACC,iBAAiB,EAAE,CAAC,CAAC;EAC5B;;EAEAC,iBAAiB,CAACC,QAAgB;IAChC,IAAI,CAACJ,kBAAkB,CAACK,iBAAiB,CAAC,IAAI,CAACC,MAAM,EAAEF,QAAQ,CAAC,CAACG,SAAS,CACxEC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,QAAQ,CAAC;MAC/C,IAAI,CAACN,iBAAiB,EAAE,CAAC,CAAC;IAC5B,CAAC,EACDS,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CACF;EACH;EAEAT,iBAAiB;IACf,IAAI,CAACU,aAAa,GAAG,IAAI,CAACZ,kBAAkB,CAACa,eAAe,CAAC,IAAI,CAACP,MAAM,CAAC,CAACQ,IAAI,CAC5ElB,GAAG,CAACmB,IAAI,IAAG;MACT,IAAI,CAACC,YAAY,GAAGD,IAAI;MACxB,OAAOA,IAAI;IACb,CAAC,CAAC,EACFpB,UAAU,CAACgB,KAAK,IAAG;MACjBF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,OAAOjB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CACH;EACH;;EAEAuB,MAAM;IACJ;IACAR,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC5B;;AAvCWZ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3BzB,8BAAuB;MACjBA,sBAAM;MAAAA,iBAAK;MACfA,8BAA8B;MACpBA;QAAA,OAAS0B,uBAAmB;MAAA,EAAC;MAAC1B,iCAAiB;MAAAA,iBAAS;MAChEA,iCAA2B;MAAnBA;QAAA,OAAS0B,YAAQ;MAAA,EAAC;MAAC1B,sBAAM;MAAAA,iBAAS;MAE5CA,+DAOM;MACNA,2DAAoC;MACtCA,iBAAM;;;MATEA,eAAkB;MAAlBA,uCAAkB;MAQpBA,eAAa;MAAbA,kCAAa","names":["of","catchError","map","i0","Page5Component","constructor","buttonClickService","ngOnInit","fetchButtonClicks","handleButtonClick","buttonId","recordButtonClick","userId","subscribe","response","console","log","error","buttonClicks$","getButtonClicks","pipe","data","buttonClicks","logout","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/selinavci/Downloads/LoginAuthenticationApp-NodeJS-AngularJS-main/frontend/src/app/components/page5/page5.component.ts","/Users/selinavci/Downloads/LoginAuthenticationApp-NodeJS-AngularJS-main/frontend/src/app/components/page5/page5.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ButtonClickService } from '../../services/button-click.service'; // Servis dosyasının yolunu kontrol edin\nimport { Observable, of } from 'rxjs'; // 'of' ekleyin\nimport { catchError, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-page5',\n  templateUrl: './page5.component.html',\n  styleUrls: ['./page5.component.css']\n})\nexport class Page5Component implements OnInit {\n  userId: number = 1; // Örnek kullanıcı ID'si, gerçek uygulamada dinamik olabilir\n  buttonClicks$: Observable<any[]> = of([]); // Başlangıç değeri olarak boş bir observable atayın\n  buttonClicks: any[] = []; // Button click verilerini tutmak için array\n\n  constructor(private buttonClickService: ButtonClickService) {}\n\n  ngOnInit(): void {\n    this.fetchButtonClicks(); // Sayfa yüklendiğinde buton tıklama verilerini al\n  }\n\n  handleButtonClick(buttonId: number): void {\n    this.buttonClickService.recordButtonClick(this.userId, buttonId).subscribe(\n      response => {\n        console.log('Button click recorded:', response);\n        this.fetchButtonClicks(); // Buton tıklama verilerini güncelle\n      },\n      error => {\n        console.error('Error recording button click:', error);\n      }\n    );\n  }\n\n  fetchButtonClicks(): void {\n    this.buttonClicks$ = this.buttonClickService.getButtonClicks(this.userId).pipe(\n      map(data => {\n        this.buttonClicks = data;\n        return data;\n      }),\n      catchError(error => {\n        console.error('Error fetching button clicks:', error);\n        return of([]); // Hata durumunda boş bir observable döndürün\n      })\n    );\n  }\n\n  logout(): void {\n    // Kullanıcı çıkışı işlemi\n    console.log('Logging out');\n  }\n}\n","<div class=\"container\">\n  <h2>Page 5</h2>\n  <div class=\"button-container\">\n    <button (click)=\"fetchButtonClicks()\">Get Button Clicks</button>\n    <button (click)=\"logout()\">Logout</button>\n  </div>\n  <div *ngIf=\"buttonClicks\">\n    <h3>Button Clicks</h3>\n    <ul>\n      <li *ngFor=\"let click of buttonClicks\">\n        Button ID: {{ click.buttonId }} - Click Count: {{ click.count }}\n      </li>\n    </ul>\n  </div>\n  <p *ngIf=\"message\">{{ message }}</p>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}