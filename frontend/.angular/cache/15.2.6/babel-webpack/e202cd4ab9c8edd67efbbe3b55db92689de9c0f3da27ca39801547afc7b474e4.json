{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:4002/api';\n  }\n  login(user) {\n    return this.http.post(`${this.apiUrl}/login`, user);\n  }\n  recordButtonClick(userId, buttonName) {\n    return this.http.post(`${this.apiUrl}/record-button-click`, {\n      userId,\n      buttonName\n    });\n  }\n  getButtonClicks(userId) {\n    return this.http.get(`${this.apiUrl}/button-clicks/${userId}`);\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,2BAA2B;EAEL;EAEvCC,KAAK,CAACC,IAAU;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAM,GAAG,IAAI,CAACC,MAAM,QAAQ,EAAEF,IAAI,CAAC;EAC1D;EAEAG,iBAAiB,CAACC,MAAc,EAAEC,UAAkB;IAClD,OAAO,IAAI,CAACP,IAAI,CAACG,IAAI,CAAM,GAAG,IAAI,CAACC,MAAM,sBAAsB,EAAE;MAAEE,MAAM;MAAEC;IAAU,CAAE,CAAC;EAC1F;EAEAC,eAAe,CAACF,MAAc;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAM,GAAG,IAAI,CAACL,MAAM,kBAAkBE,MAAM,EAAE,CAAC;EACrE;;AAfWR,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAY,SAAZZ,YAAY;EAAAa,YAFX;AAAM","names":["LoginService","constructor","http","login","user","post","apiUrl","recordButtonClick","userId","buttonName","getButtonClicks","get","factory","providedIn"],"sourceRoot":"","sources":["/Users/selinavci/Downloads/nodejs-register-login-admin-panel-main-2/frontend/src/app/services/login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private apiUrl = 'http://localhost:4002/api';\n\n  constructor(private http: HttpClient) {}\n\n  login(user: User): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/login`, user);\n  }\n\n  recordButtonClick(userId: string, buttonName: string): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/record-button-click`, { userId, buttonName });\n  }\n\n  getButtonClicks(userId: string): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/button-clicks/${userId}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}