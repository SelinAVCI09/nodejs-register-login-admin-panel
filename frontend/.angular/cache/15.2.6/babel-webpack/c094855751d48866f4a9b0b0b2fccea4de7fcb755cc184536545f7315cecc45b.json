{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AdminLoginComponent = class AdminLoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.errorMessage = '';\n  }\n  onLogin(usernameInput, passwordInput) {\n    const username = usernameInput.value.trim();\n    const password = passwordInput.value;\n    if (!username || !password) {\n      this.errorMessage = 'Kullanıcı adı ve şifre girilmelidir.';\n      return;\n    }\n    this.authService.adminLogin({\n      username,\n      password\n    }).subscribe(response => {\n      const token = response.token;\n      this.authService.setToken(token);\n      this.router.navigate(['/page5']); // Başarılı girişten sonra yönlendirme\n    }, error => {\n      this.errorMessage = 'Giriş başarısız! Lütfen kullanıcı adınızı ve şifrenizi kontrol edin.';\n    });\n  }\n};\nAdminLoginComponent = __decorate([Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})], AdminLoginComponent);\nexport { AdminLoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAG9BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAF5D,iBAAY,GAAW,EAAE;EAE8C;EAEvEC,OAAO,CAACC,aAA+B,EAAEC,aAA+B;IACtE,MAAMC,QAAQ,GAAGF,aAAa,CAACG,KAAK,CAACC,IAAI,EAAE;IAC3C,MAAMC,QAAQ,GAAGJ,aAAa,CAACE,KAAK;IAEpC,IAAI,CAACD,QAAQ,IAAI,CAACG,QAAQ,EAAE;MAC1B,IAAI,CAACC,YAAY,GAAG,sCAAsC;MAC1D;;IAGF,IAAI,CAACT,WAAW,CAACU,UAAU,CAAC;MAAEL,QAAQ;MAAEG;IAAQ,CAAE,CAAC,CAACG,SAAS,CAC3DC,QAAQ,IAAG;MACT,MAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAK;MAC5B,IAAI,CAACb,WAAW,CAACc,QAAQ,CAACD,KAAK,CAAC;MAChC,IAAI,CAACZ,MAAM,CAACc,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,EACDC,KAAK,IAAG;MACN,IAAI,CAACP,YAAY,GAAG,sEAAsE;IAC5F,CAAC,CACF;EACH;CACD;AAzBYX,mBAAmB,eAL/BD,SAAS,CAAC;EACToB,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACWrB,mBAAmB,CAyB/B;SAzBYA,mBAAmB","names":["Component","AdminLoginComponent","constructor","authService","router","onLogin","usernameInput","passwordInput","username","value","trim","password","errorMessage","adminLogin","subscribe","response","token","setToken","navigate","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/selinavci/Desktop/Kentkart/nodejs-register-login-admin-panel-main-2/frontend/src/app/components/admin-login/admin-login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent {\n  errorMessage: string = '';\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  onLogin(usernameInput: HTMLInputElement, passwordInput: HTMLInputElement): void {\n    const username = usernameInput.value.trim();\n    const password = passwordInput.value;\n\n    if (!username || !password) {\n      this.errorMessage = 'Kullanıcı adı ve şifre girilmelidir.';\n      return;\n    }\n\n    this.authService.adminLogin({ username, password }).subscribe(\n      response => {\n        const token = response.token;\n        this.authService.setToken(token);\n        this.router.navigate(['/page5']); // Başarılı girişten sonra yönlendirme\n      },\n      error => {\n        this.errorMessage = 'Giriş başarısız! Lütfen kullanıcı adınızı ve şifrenizi kontrol edin.';\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}