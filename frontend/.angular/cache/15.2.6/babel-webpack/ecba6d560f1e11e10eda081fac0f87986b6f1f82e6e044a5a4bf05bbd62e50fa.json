{"ast":null,"code":"import { jwtDecode } from 'jwt-decode'; // Adlandırılmış import ile import et\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:4002/api'; // API URL'inizi güncelledik\n    this.tokenKey = 'auth-token';\n  }\n  // Login method\n  login(user) {\n    return this.http.post(`${this.apiUrl}/login`, user);\n  }\n  // Store token in local storage\n  setToken(token) {\n    localStorage.setItem(this.tokenKey, token);\n  }\n  // Get token from local storage\n  getToken() {\n    return localStorage.getItem(this.tokenKey);\n  }\n  // Decode token\n  decodeToken(token) {\n    return jwtDecode(token); // Kullanımı güncelledik\n  }\n  // Logout method\n  logout() {\n    localStorage.removeItem(this.tokenKey);\n    return this.http.post(`${this.apiUrl}/logout`, {});\n  }\n  adminLogin(username, password) {\n    return this.http.post(`${this.apiUrl}/admin-login`, {\n      username,\n      password\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAKA,SAASA,SAAS,QAAQ,YAAY,CAAC,CAAC;;;AAKxC,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,WAAM,GAAG,2BAA2B,CAAC,CAAC;IACtC,aAAQ,GAAG,YAAY;EAEQ;EAEvC;EACAC,KAAK,CAACC,IAAS;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAM,GAAG,IAAI,CAACC,MAAM,QAAQ,EAAEF,IAAI,CAAC;EAC1D;EAEA;EACAG,QAAQ,CAACC,KAAa;IACpBC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACC,QAAQ,EAAEH,KAAK,CAAC;EAC5C;EAEA;EACAI,QAAQ;IACN,OAAOH,YAAY,CAACI,OAAO,CAAC,IAAI,CAACF,QAAQ,CAAC;EAC5C;EAEA;EACAG,WAAW,CAACN,KAAa;IACvB,OAAOT,SAAS,CAACS,KAAK,CAAC,CAAC,CAAC;EAC3B;EAEA;EACAO,MAAM;IACJN,YAAY,CAACO,UAAU,CAAC,IAAI,CAACL,QAAQ,CAAC;IACtC,OAAO,IAAI,CAACT,IAAI,CAACG,IAAI,CAAO,GAAG,IAAI,CAACC,MAAM,SAAS,EAAE,EAAE,CAAC;EAC1D;EAGAW,UAAU,CAACC,QAAgB,EAAEC,QAAgB;IAC3C,OAAO,IAAI,CAACjB,IAAI,CAACG,IAAI,CAAM,GAAG,IAAI,CAACC,MAAM,cAAc,EAAE;MAAEY,QAAQ;MAAEC;IAAQ,CAAE,CAAC;EACpF;;AAnCanB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFV;AAAM","names":["jwtDecode","AuthService","constructor","http","login","user","post","apiUrl","setToken","token","localStorage","setItem","tokenKey","getToken","getItem","decodeToken","logout","removeItem","adminLogin","username","password","factory","providedIn"],"sourceRoot":"","sources":["/Users/selinavci/Downloads/LoginAuthenticationApp-NodeJS-AngularJS-main/frontend/src/app/services/auth.service.ts"],"sourcesContent":["// src/app/services/auth.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { jwtDecode } from 'jwt-decode'; // Adlandırılmış import ile import et\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = 'http://localhost:4002/api'; // API URL'inizi güncelledik\n  private tokenKey = 'auth-token';\n\n  constructor(private http: HttpClient) {}\n\n  // Login method\n  login(user: any): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/login`, user);\n  }\n\n  // Store token in local storage\n  setToken(token: string): void {\n    localStorage.setItem(this.tokenKey, token);\n  }\n\n  // Get token from local storage\n  getToken(): string | null {\n    return localStorage.getItem(this.tokenKey);\n  }\n\n  // Decode token\n  decodeToken(token: string): any {\n    return jwtDecode(token); // Kullanımı güncelledik\n  }\n\n  // Logout method\n  logout(): Observable<void> {\n    localStorage.removeItem(this.tokenKey);\n    return this.http.post<void>(`${this.apiUrl}/logout`, {});\n  }\n\n\n  adminLogin(username: string, password: string): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/admin-login`, { username, password });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}