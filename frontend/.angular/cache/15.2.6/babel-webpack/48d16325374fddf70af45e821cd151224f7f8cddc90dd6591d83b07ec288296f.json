{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ButtonClickService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:4002/api/button-click'; // API URL'nizi buraya ekleyin\n  }\n\n  recordButtonClick(userId, buttonId) {\n    const payload = {\n      userId,\n      buttonId\n    };\n    return this.http.post(this.apiUrl, payload);\n  }\n  getButtonClicks(userId) {\n    return this.http.get(`${this.apiUrl}/clicks/${userId}`);\n  }\n}\nButtonClickService.ɵfac = function ButtonClickService_Factory(t) {\n  return new (t || ButtonClickService)(i0.ɵɵinject(i1.HttpClient));\n};\nButtonClickService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ButtonClickService,\n  factory: ButtonClickService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,kBAAkB;EAG7BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,wCAAwC,CAAC,CAAC;EAEpB;;EAEvCC,iBAAiB,CAACC,MAAc,EAAEC,QAAgB;IAChD,MAAMC,OAAO,GAAG;MAAEF,MAAM;MAAEC;IAAQ,CAAE;IACpC,OAAO,IAAI,CAACH,IAAI,CAACK,IAAI,CAAM,IAAI,CAACC,MAAM,EAAEF,OAAO,CAAC;EAClD;EAEAG,eAAe,CAACL,MAAc;IAC5B,OAAO,IAAI,CAACF,IAAI,CAACQ,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,WAAWJ,MAAM,EAAE,CAAC;EAChE;;AAZWJ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAW,SAAlBX,kBAAkB;EAAAY,YAFjB;AAAM","names":["ButtonClickService","constructor","http","recordButtonClick","userId","buttonId","payload","post","apiUrl","getButtonClicks","get","factory","providedIn"],"sourceRoot":"","sources":["/Users/selinavci/Downloads/LoginAuthenticationApp-NodeJS-AngularJS-main/frontend/src/app/services/button-click.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ButtonClickService {\n  private apiUrl = 'http://localhost:4002/api/button-click'; // API URL'nizi buraya ekleyin\n\n  constructor(private http: HttpClient) {}\n\n  recordButtonClick(userId: number, buttonId: number): Observable<any> {\n    const payload = { userId, buttonId };\n    return this.http.post<any>(this.apiUrl, payload);\n  }\n\n  getButtonClicks(userId: number): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/clicks/${userId}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}